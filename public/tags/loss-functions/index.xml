<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>loss-functions on KiloBytes by KB</title>
    <link>https://Kshitij-Banerjee.github.io/tags/loss-functions/</link>
    <description>Recent content in loss-functions on KiloBytes by KB</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://Kshitij-Banerjee.github.io/tags/loss-functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Loss Functions in ML</title>
      <link>https://Kshitij-Banerjee.github.io/2023/02/18/loss-functions-in-ml/</link>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://Kshitij-Banerjee.github.io/2023/02/18/loss-functions-in-ml/</guid>
      <description>Introduction Loss functions tell the algorithm how far we are from actual truth, and their gradients/derivates help understand how to reduce the overall loss (by changing the parameters being trained on)
All losses in keras defined here
But why is the loss function expressed as a negative loss? Plot: As probabilities only lie between [0-1], the plot is only relevant between X from 0-1
This means, that it penalises a low probability of success exponentially more.</description>
    </item>
  </channel>
</rss>
